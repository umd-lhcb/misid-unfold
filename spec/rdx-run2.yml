# this YAML is used by:
# - pidcalib2 wrapper (P)
# - tagged histogram builder (T)
# - ghost/uncategoried efficiency histogram builder (G)
# - unfolding weights applyer (A)
# - unfolding efficiency calculator (U)
# - histogram merger (M)


binning:
    P: [3.e+3, 6.e+3, 10.e+3, 15.6e+3, 27.e+3, 60.e+3, 100.e+3]  # the scific notation has to be written like this for PyYAML
    ETA: [1.7, 3.6, 5.0]
    nTracks: [0, 200, 600]


# cuts for each tagged species, used by ALL
tags:
    pi: >-
        Brunel_MC15TuneV1_ProbNNpi > 0.1 &
        Brunel_DLLK < 0.0 &
        Brunel_DLLp < 0.0 &
        Brunel_DLLe < 2.0 &
        Brunel_MC15TuneV1_ProbNNghost < 0.25
    k: >-
        Brunel_MC15TuneV1_ProbNNk > 0.1 &
        Brunel_DLLK > 0.0 &
        (Brunel_DLLp - Brunel_DLLK) < 0.0 &
        (Brunel_DLLe - Brunel_DLLK) < -2.0 &
        Brunel_MC15TuneV1_ProbNNghost < 0.25
    p: >-
        Brunel_MC15TuneV1_ProbNNp > 0.1 &
        Brunel_DLLp > 0.0 &
        (Brunel_DLLp - Brunel_DLLK) > 2.0 &
        (Brunel_DLLe - Brunel_DLLp) < -2.0 &
        Brunel_MC15TuneV1_ProbNNghost < 0.25
    e: >-
        Brunel_DLLe > 2.0 &
        (Brunel_DLLe - Brunel_DLLK) > -2.0 &
        (Brunel_DLLe - Brunel_DLLp) > -2.0 &
        Brunel_MC15TuneV1_ProbNNghost < 0.25
    g: "!pi & !k & !p & !e"  # ghost/uncategoried


# used by (P), as the names suggests
pidcalib_config:
    samples:
        pi: Pi
        k: K
        p: P
        e: e_B_Jpsi
    tags:
        cut: "TRACK_GHOSTPROB < 0.5 & IsMuon == 0.0 & InMuonAcc == 1.0 & MuonUnbiased == 1.0"
        # here the pid_cut section is taken from the 'tagged' section, with the
        # corresponding particle name (e.g. 'pi' -> 'tags'['pi'])
    tags_addon:  # ad-hoc tags
        mu:
            nom:
                cut: "TRACK_GHOSTPROB < 0.5 & MuonUnbiased == 1.0"
                pid_cut: "IsMuon == 1.0 & DLLmu > 2.0 & DLLe < 1.0"
                add_pid_cut: "UBDT > 0.25"
            denom:
                cut: "TRACK_GHOSTPROB < 0.5 & MuonUnbiased == 1.0"
                pid_cut: "IsMuon == 0.0 & InMuonAcc == 1.0"


# specify additional source of histograms
# used by the efficiency histogram merger (M)
# this will generate a single efficiency histo root file
input_histos:
    2016:
        true_to_tag: "../histos/rdx-22_04_07_01_05-true_to_tag-2016"
        extra:
            "../histos/rjpsi-22_03_14_03_17-demo-2016/rjpsi-demo.root":
                H2H_Ghost_TO_Pi: gTrueToPiTag
                H2H_Ghost_TO_K: gTrueToKTag
                H2H_Ghost_TO_P: gTrueToPTag
                H2H_Ghost_TO_e: gTrueToETag
                H2H_Ghost_TO_Ghost: gTrueToGTag
                H2H_Ghost_TO_Mu: gTrueToMuTag
        product:
            # FIXME: Not implemented. Reserved for electron UBDT efficiency product
            #        This means that the final eTrue -> Tag efficiency would be:
            #          eTrueTo_Tag (from PIDCalib) * eTrueTo_TagUBDT
            "/dev/null":
                eTrueToPiTag: eTrueToPiTag_BDTmu
                eTrueToKTag: eTrueToKTag_BDTmu
                eTrueToPTag: eTrueToPTag_BDTmu
                eTrueToETag: eTrueToETag_BDTmu
                eTrueToGTag: eTrueToGTag_BDTmu


# building tagged histograms, used by (T), and (U)
# for (U), it's for figuring out histogram names only
# the key names will be prepended to the histograms
# e.g. Dst: <path_to_histo> -> Dst__piTag, Dst__kTag, etc.
input_ntps:
    2016:
        # each entry should be a key-list pair, where list provides path to ntuples, with tree names
        D0:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/D0--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_ok & in_fit_range"
        D0_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/D0--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_sb"
        ####
        D0_ws_Mu:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/D0_ws_Mu--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_ok & in_fit_range"
        D0_ws_Mu_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/D0_ws_Mu--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_sb"
        ####
        Dst:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_ok & in_fit_range"
        Dst_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_sb"
        Dst_dsb:  # D* comb, within deltaM window
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "d0_m_ok & !dst_m_ok & b_m_ok & in_fit_range"
        Dst_dsb_bsb: # D* comb, outside deltaM window
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "d0_m_ok & !dst_m_ok & b_m_sb"
        ####
        Dst_ws_Mu:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Mu--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_ok & in_fit_range"
        Dst_ws_Mu_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Mu--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_sb"
        Dst_ws_Mu_dsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Mu--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "d0_m_ok & !dst_m_ok & b_m_ok & in_fit_range"
        Dst_ws_Mu_dsb_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Mu--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "d0_m_ok & !dst_m_ok & b_m_sb"
        ####
        Dst_ws_Pi:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Pi--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_ok & in_fit_range"
        Dst_ws_Pi_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Pi--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "dx_m_ok & b_m_sb"
        Dst_ws_Pi_dsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Pi--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "d0_m_ok & !dst_m_ok & b_m_ok & in_fit_range"
        Dst_ws_Pi_dsb_bsb:
            files: "../ntuples/0.9.6-2016_production/Dst_D0-mu_misid-study-step2/Dst_ws_Pi--22_04_24--mu_misid--data--2016--m?.root:tree"
            cuts: "d0_m_ok & !dst_m_ok & b_m_sb"


# Used by (A)
weight_brs:
    2016:
        # for specially postprocessed ntuple
        tree:
            - prefix: D0
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_norm
            - prefix: D0_bsb
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_bsb
        # for step-1 ntuple
        TupleBminus/DecayTree:
            - prefix: D0
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_norm
            - prefix: D0_bsb
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_bsb
        TupleB0/DecayTree:
            - prefix: Dst
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_norm
            - prefix: Dst_dsb
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_dsb
            - prefix: Dst_bsb
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_bsb
            - prefix: Dst_dsb_bsb
              file: "../histos/rdx-22_06_24_00_46-unfolded-2016/unfolded.root"
              name: wmis_dsb_bsb
